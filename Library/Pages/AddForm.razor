<div class="form-group">
    <label for="Title">Title</label>
    <input type="title" class="form-control" @bind-value="@newBook.Title" id="Title" placeholder="title">
  </div>
  <div class="form-group">
    <label for="description">Description</label>
    <input type="description" class="form-control" @bind-value="@newBook.description" id="description" placeholder="description">
  </div>
  
  <div class="form-group">
    <label for="Author">Author</label>
    <input type="text" class="form-control" @bind="@authorInput" id="Author" placeholder="Author">
</div>
<button type="button" class="btn btn-primary" @onclick="AddAuthor">Add Author</button>

  <button type="button" class="btn btn-success button" @onclick="AddNewBook" >submit</button>


@code{
    public Book newBook = new Book(){
        BookId = Guid.NewGuid(),
        Authors = new List<string>()
    };
    public string authorInput {get; set;}
    private void AddAuthor()
    {
    if (!string.IsNullOrWhiteSpace(authorInput))
    {
        newBook?.Authors.Add(authorInput);
        authorInput = string.Empty;
    }
      }

    

     [Parameter]
    public EventCallback<Book> AddBook {get; set;}

    public async Task AddNewBook(){
        await AddBook.InvokeAsync(newBook);

        newBook = new Book();
        newBook.BookId = Guid.NewGuid();
    }

}